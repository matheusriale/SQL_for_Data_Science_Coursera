Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 8090 (business_id)
vi. Checkin = 493
vii. Photo = 6493
viii. Tip = 3979 (business_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	SELECT COUNT(*)
	FROM user
	WHERE id IS NULL OR 
    		name IS NULL OR 
    		review_count IS NULL OR
   		 yelping_since IS NULL OR
    		useful IS NULL OR
    		funny IS NULL OR
    		cool IS NULL OR
    		fans IS NULL OR
    		average_stars IS NULL OR
    		compliment_hot IS NULL OR 
    		compliment_more IS NULL OR
    		compliment_profile IS NULL OR
    		compliment_cute IS NULL OR
    		compliment_list IS NULL OR
   		compliment_note IS NULL OR
    		compliment_plain IS NULL OR
    		compliment_cool IS NULL OR
    		compliment_funny IS NULL OR 
    		compliment_writer IS NULL OR
    		compliment_photos IS NULL 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5 		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	SELECT city,SUM(review_count)
	FROM business
	GROUP BY city
	ORDER BY SUM(review_count) DESC
	
	
	Copy and Paste the Result Below:

	+-----------------+-------------------+
	| city            | SUM(review_count) |
	+-----------------+-------------------+
	| Las Vegas       |             82854 |
	| Phoenix         |             34503 |
	| Toronto         |             24113 |
	| Scottsdale      |             20614 |
	| Charlotte       |             12523 |
	| Henderson       |             10871 |
	| Tempe           |             10504 |
	| Pittsburgh      |              9798 |
	| Montréal        |              9448 |
	| Chandler        |              8112 |
	| Mesa            |              6875 |
	| Gilbert         |              6380 |
	| Cleveland       |              5593 |
	| Madison         |              5265 |
	| Glendale        |              4406 |
	| Mississauga     |              3814 |
	| Edinburgh       |              2792 |
	| Peoria          |              2624 |
	| North Las Vegas |              2438 |
	| Markham         |              2352 |
	| Champaign       |              2029 |
	| Stuttgart       |              1849 |
	| Surprise        |              1520 |
	| Lakewood        |              1465 |
	| Goodyear        |              1155 |
	+-----------------+-------------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars,SUM(review_count)
FROM business
WHERE city='Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------------+
| stars | SUM(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars,SUM(review_count)
FROM business
WHERE city='Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+-------------------+
| stars | SUM(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	SELECT name,review_count
	FROM user
	ORDER BY review_count DESC
	LIMIT 3

	Copy and Paste the Result Below:

	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	Not necessarily. We can see in the query below that 'Gerald' for example has 2000 reviews and
	less fans than people with way less reviews. A lot of reviews certainly should help but its 
	not the only factor. 

	SELECT name,review_count,fans
	FROM user
	ORDER BY fans DESC

	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Amy       |          609 |  503 |
	| Mimi      |          968 |  497 |
	| Harald    |         1153 |  311 |
	| Gerald    |         2000 |  253 |
	| Christine |          930 |  173 |
	| Lisa      |          813 |  159 |
	| Cat       |          377 |  133 |
	| William   |         1215 |  126 |
	| Fran      |          862 |  124 |
	| Lissa     |          834 |  120 |
	| Mark      |          861 |  115 |
	| Tiffany   |          408 |  111 |
	| bernice   |          255 |  105 |
	| Roanna    |         1039 |  104 |
	| Angela    |          694 |  101 |
	| .Hon      |         1246 |  101 |
	| Ben       |          307 |   96 |
	| Linda     |          584 |   89 |
	| Christina |          842 |   85 |
	| Jessica   |          220 |   84 |
	| Greg      |          408 |   81 |
	| Nieves    |          178 |   80 |
	| Sui       |          754 |   78 |
	| Yuri      |         1339 |   76 |
	| Nicole    |          161 |   73 |
	+-----------+--------------+------+
	
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: With the word love we have more reviews (1780)

	
	SQL code used to arrive at answer:

	SELECT COUNT(*)
	FROM review
	WHERE text LIKE '%hate%';
	-- 232

	SELECT COUNT(*)
	FROM review
	WHERE text LIKE '%love%'
	-- 1780

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

	SELECT id,name,fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10
	
	
	Copy and Paste the Result Below:

	+------------------------+-----------+------+
	| id                     | name      | fans |
	+------------------------+-----------+------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
	+------------------------+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
-- City: Toronto

i. Do the two groups you chose to analyze have a different distribution of hours?

-- The 2-3 stars group (Only one in the 'Food' category) generally are open for about 14 hours,
-- where as the 4-5 stars group has a shorter operating time, ranging from 6 to 10 hours.

ii. Do the two groups you chose to analyze have a different number of reviews?
         
-- Yes, the 2-3 stars group (1 establishment) has about 10 reviews where as the 4-5 has about 40 reviews under 2 establishments.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

-- Since we have only a few matches for our city and category, infering something based 
-- of only those 3 establishments could lead us to wrong analysis.

SQL code used for analysis:

SELECT  b.city,
        b.postal_code,
        b.review_count,
        b.name,
        c.category,
        h.hours,
        CASE WHEN b.stars >= 4 THEN '4-5 stars'
             WHEN (b.stars >=2 AND b.stars <= 3) THEN '2-3 stars'
        END AS Rating

FROM business b 
    INNER JOIN category c
    ON b.id = c.business_id
    INNER JOIN hours h 
    ON b.id = h.business_id

WHERE b.city = 'Toronto'
     AND c.category = 'Food'
ORDER BY b.stars DESC

+---------+-------------+--------------+--------------+----------+-----------------------+-----------+
| city    | postal_code | review_count | name         | category | hours                 | Rating    |
+---------+-------------+--------------+--------------+----------+-----------------------+-----------+
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Monday|16:00-2:00     | 4-5 stars |
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Tuesday|18:00-2:00    | 4-5 stars |
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Friday|18:00-2:00     | 4-5 stars |
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Wednesday|18:00-2:00  | 4-5 stars |
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Thursday|18:00-2:00   | 4-5 stars |
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Sunday|16:00-2:00     | 4-5 stars |
| Toronto | M6P 1A6     |           26 | Cabin Fever  | Food     | Saturday|16:00-2:00   | 4-5 stars |
| Toronto | M6H 1V5     |           15 | Halo Brewery | Food     | Tuesday|15:00-21:00   | 4-5 stars |
| Toronto | M6H 1V5     |           15 | Halo Brewery | Food     | Friday|15:00-21:00    | 4-5 stars |
| Toronto | M6H 1V5     |           15 | Halo Brewery | Food     | Wednesday|15:00-21:00 | 4-5 stars |
| Toronto | M6H 1V5     |           15 | Halo Brewery | Food     | Thursday|15:00-21:00  | 4-5 stars |
| Toronto | M6H 1V5     |           15 | Halo Brewery | Food     | Sunday|11:00-21:00    | 4-5 stars |
| Toronto | M6H 1V5     |           15 | Halo Brewery | Food     | Saturday|11:00-21:00  | 4-5 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Monday|8:00-22:00     | 2-3 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Tuesday|8:00-22:00    | 2-3 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Friday|8:00-22:00     | 2-3 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Wednesday|8:00-22:00  | 2-3 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Thursday|8:00-22:00   | 2-3 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Sunday|8:00-22:00     | 2-3 stars |
| Toronto | M6R 1X3     |           10 | Loblaws      | Food     | Saturday|8:00-22:00   | 2-3 stars |
+---------+-------------+--------------+--------------+----------+-----------------------+-----------+

		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
-- We have a higher number of business which are open. 
-- Open: 8480 
-- Closed: 1520        
         
ii. Difference 2:
-- Open businesses are generally rated higher than the closed ones (by average_stars)
-- Open: 3.67
-- Closed: 3.52

SQL code used for analysis:

SELECT  COUNT(DISTINCT(id)) AS num_of_business,
        ROUND(AVG(review_count),3) AS avg_review_count,
        SUM(review_count) AS all_reviews,
        AVG(stars) AS avg_stars,
        is_open

FROM business

GROUP BY is_open

+-----------------+------------------+-------------+---------------+---------+
| num_of_business | avg_review_count | all_reviews |     avg_stars | is_open |
+-----------------+------------------+-------------+---------------+---------+
|            1520 |           23.198 |       35261 | 3.52039473684 |       0 |
|            8480 |           31.757 |      269300 | 3.67900943396 |       1 |
+-----------------+------------------+-------------+---------------+---------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

-- Analyze the impact of having a lot of establishments (On the city of Toronto) on the same category, if it drastically influences their rating
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

-- We need the establishments grouped by category, and also number of businesses per category,
-- average review count, total reviews, average_stars on that category. I choose that data because 
-- I was curious if Toronto establishments were highly rated on certain categories and if the number 
-- of establishments influenced that.                     
                  
iii. Output of your finished dataset:
         

+-----------------+------------------+-------------+---------------+---------------------------+
| num_of_business | avg_review_count | all_reviews |     avg_stars | category                  |
+-----------------+------------------+-------------+---------------+---------------------------+
|              10 |             29.9 |         299 |           3.4 | Restaurants               |
|               4 |             21.5 |          86 |         3.625 | Bars                      |
|               4 |             13.5 |          54 |         3.625 | Food                      |
|               4 |             21.5 |          86 |         3.625 | Nightlife                 |
|               4 |            15.75 |          63 |         4.375 | Shopping                  |
|               3 |           15.333 |          46 | 3.83333333333 | Active Life               |
|               3 |           12.333 |          37 | 4.33333333333 | Beauty & Spas             |
|               3 |           29.333 |          88 |           3.5 | Japanese                  |
|               3 |           25.333 |          76 | 3.66666666667 | Pubs                      |
|               3 |            5.333 |          16 | 3.33333333333 | Sushi Bars                |
|               2 |             15.5 |          31 |          4.25 | Cosmetics & Beauty Supply |
|               2 |              8.5 |          17 |           4.0 | Fitness & Instruction     |
|               2 |             10.5 |          21 |          3.25 | Health & Medical          |
|               2 |             48.5 |          97 |           4.0 | Spanish                   |
|               1 |             16.0 |          16 |           4.5 | Acupuncture               |
|               1 |             26.0 |          26 |           4.5 | Arcades                   |
|               1 |             26.0 |          26 |           4.5 | Art Galleries             |
|               1 |             26.0 |          26 |           4.5 | Arts & Entertainment      |
|               1 |              3.0 |           3 |           1.5 | Banks & Credit Unions     |
|               1 |             29.0 |          29 |           3.5 | Beaches                   |
|               1 |             15.0 |          15 |           4.0 | Beer                      |
|               1 |             26.0 |          26 |           4.5 | Books                     |
|               1 |             15.0 |          15 |           4.0 | Breweries                 |
|               1 |             47.0 |          47 |           3.0 | Burgers                   |
|               1 |             26.0 |          26 |           4.5 | Cafes                     |
+-----------------+------------------+-------------+---------------+---------------------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT  COUNT(DISTINCT(id)) AS num_of_business,
        ROUND(AVG(review_count),3) AS avg_review_count,
        SUM(review_count) AS all_reviews,
        AVG(stars) AS avg_stars,
        c.category
FROM business
    INNER JOIN category c ON business.id = c.business_id
WHERE city = 'Toronto'
GROUP BY c.category
ORDER BY num_of_business desc